GOOGLE_API_KEY=AIzaSyAYMrHHzrScXoXIGPU57Zk-mXHm9P7Qv2o


# Copy this file to ../.env (engine root) or to your current working directory as .env
# The engine automatically loads .env and expands ${VAR} placeholders in config.yml and pipeline files.

# Select the sample pipeline to auto-run on engine start
PIPELINE_FILE=./samples/sample_pipeline.yaml

# Basic user inputs consumed by sdlc_engine.py
PROJECT_NAME=Customer Feedback Portal
BUSINESS_DOMAIN=Customer Experience Management
TARGET_USERS=Product Managers, Support Agents, End Users
TECH_PREFERENCES=React, Node.js (Express), PostgreSQL, Docker
TIMELINE_MONTHS=3
BUDGET_RANGE=$50K-$100K

# Keep provider validation non-strict (only checks presence of keys)
STRICT_AI_VALIDATION=false

# Optional: AI provider keys (uncomment and set if you want to validate/connect)
# OPENAI_API_KEY=sk-your-openai-key
# ANTHROPIC_API_KEY=your-anthropic-key
# GOOGLE_API_KEY=your-gemini-key
# AZURE_OPENAI_KEY=your-azure-key
# AZURE_OPENAI_ENDPOINT=https://your-endpoint.openai.azure.com
# AZURE_DEPLOYMENT_NAME=your-deployment

# Other optional repository integrations (leave empty if not used)
# GITHUB_TOKEN=
# GITHUB_ORG=
# CONFLUENCE_URL=
# CONFLUENCE_USERNAME=
# CONFLUENCE_API_TOKEN=
# CONFLUENCE_SPACE=
# SHAREPOINT_TENANT_ID=
# SHAREPOINT_CLIENT_ID=
# SHAREPOINT_CLIENT_SECRET=
# SHAREPOINT_SITE_ID=
# JIRA_URL=
# JIRA_USERNAME=
# JIRA_API_TOKEN=
# JIRA_PROJECT=
